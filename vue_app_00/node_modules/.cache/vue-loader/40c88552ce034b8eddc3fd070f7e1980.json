{"remainingRequest":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\khy\\fourth\\day05\\vue_app_00\\src\\components\\web1908\\xz\\Product.vue?vue&type=template&id=4e6642bd","dependencies":[{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\src\\components\\web1908\\xz\\Product.vue","mtime":1575442083453},{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1526010762000},{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n    <div class=\"product_app\">\n        <!-- <h3>Product.vue商品列表</h3> -->\n        <!-- 一个商品信息 -->\n        <div class=\"goods-item\" v-for=\"(item,i) of list\" :key=\"i\">\n            <!-- 商品图片 -->\n            <img :src=\"'http://127.0.0.1:4000/'+item.pic\">\n            <!-- 商品名称 -->\n            <h4>{{item.lname}}</h4>\n            <h5 class=\"price\">{{item.price.toFixed(2)}}</h5>\n            <mt-button @click=\"addcart\" :data-lid=\"item.lid\" :data-lname=\"item.lname\" :data-price=\"item.price\">加入购物车</mt-button>\n        </div>\n        <!-- 查询购物车 -->\n        <mt-button size=\"large\">查看购物车</mt-button>\n        <!-- 加载更多 -->\n        <mt-button size=\"large\" @click=\"loadMore\">加载更多</mt-button>\n        <!-- 查看购物车 -->\n        <mt-button size=\"large>查看购物车</mt-button>\n        <!-- {{list}} -->\n    </div>\n</template>\n<script>\nexport default {\n    created(){//组件创建成功后加载\n        this.loadMore();//加载数据\n    },\n    data(){//保存共享数据\n        return {\n            list:[],//服务器返回的结果\n            pno:0,//当前显示的页码\n        }\n    },\n    methods:{//添加函数\n        addcart(event){ //event:事件对象,.target触发事件对象(按钮)\n            //功能:添加至购物车\n            console.log(1);\n            //1.在参数中添加属性event\n            //2.获取三个参数\n            var lid = event.target.dataset.lid;//.dataset专用于保存自定义属性值对象\n            var price = event.target.dataset.price;\n            var lname = event.target.dataset.lname;\n            console.log(2);\n            console.log(lid+\":\"+price+\":\"+lname);\n            //3.创建变量url\n            var url = \"addcart\";\n            //4.创建变量obj\n            var obj = {lid,lname,price}\n            //5.发送ajax请求\n            this.axios.get(url,{params:obj}).then(res=>{\n                console.log(3);\n                console.log(res);\n                if(res.data.code==-2){\n                    this.$toast(\"请登录!\");\n                    this.$router.push(\"/Login\");\n                    //购物车组件 /Cart\n                    //查看购物车\n                }else{\n                    this.$toast(\"添加成功\")\n                }\n            })\n            //6.获取服务器返回的数据\n        },\n        loadMore(){\n            //功能:加载下一个数据\n            this.pno++;\n            console.log(1);\n            //1.创建变量url\n            var url = \"product\";\n            //2.创建变量obj\n            var obj = {pno:this.pno};\n            //3.发送ajax请求\n            this.axios.get(url,{params:obj})\n            .then(res=>{\n                //console.log(2);\n                //console.log(res.data.data)\n                //4.获取服务器返回结果\n                //5.在data添加属性list\n                //  保存返回数据\n                //this.list=res.data.data;//第一个data是ajax返回,第二个data是上面的data\n                var rows=this.list.concat(res.data.data);\n                this.list = rows;\n                //6.在模板创建循环显示数据\n            })\n        }\n    }\n}\n</script>\n<style scoped>\n    /*1.最外层父元素*/\n    .product_app{\n        /*弹性布局 子元素两端对齐 */\n        display:flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        padding:4px;/*内边距 */\n    }\n    /*2.一个商品*/\n    .goods-item{\n        width:48%;/*一半 */\n        border:1px solid #ccc;\n        border-radius: 5px; /*圆角 */\n        margin:2px 0;/*外边距 */\n        padding:2px;\n        display: flex;/*弹性布局 */\n        flex-direction: column;/*按列 */\n        min-height:257px;\n    }\n    /*3.一个商品的图片*/\n    .goods-item img{\n        width:100%;\n    }\n</style>",null]}