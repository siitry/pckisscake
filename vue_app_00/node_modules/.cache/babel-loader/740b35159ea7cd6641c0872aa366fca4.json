{"remainingRequest":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\khy\\fourth\\day05\\vue_app_00\\src\\components\\web1908\\xz\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\src\\components\\web1908\\xz\\Cart.vue","mtime":1575452821977},{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //保存购物车返回的数据\n      allcb: false //用来保存全选按钮的状态\n\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    selectAll: function selectAll() {//功能:全选按钮状态切换处理函数\n      //1.获取全选按钮状态\n      //2.创建循环遍历购物车商品\n      //3.将全选的状态赋值\n    },\n    loadMore: function loadMore() {\n      var _this = this;\n\n      //加载购物车列表\n      //1.创建变量url\n      var url = \"findcart\"; //2.发送请求\n\n      console.log(1);\n      this.axios.get(url).then(function (res) {\n        console.log(2);\n        console.log(res); //3.获取服务器返回的数据\n        //4.保存到list\n        // this.list = res.data.data;\n        //4.1创建变量rows保存返回值\n\n        var rows = res.data.data; //4.2创建循环遍历数组\n        //4.3添加属性cb表示商品复选框状态\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            item.cb = true;\n          } //4.4将rows赋值给this.list\n\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this.list = rows; //5.在模板中输出..\n      });\n    }\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA,EADA;AACA;AACA,aAAA,KAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,SAPA,qBAOA;AACA,SAAA,QAAA;AACA,GATA;AAUA,WAAA;AACA,aADA,uBACA,CACA;AACA;AACA;AACA;AACA,KANA;AAOA,YAPA,sBAOA;AAAA;;AACA;AACA;AACA,UAAA,MAAA,UAAA,CAHA,CAIA;;AACA,cAAA,GAAA,CAAA,CAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,eAAA;AACA,gBAAA,GAAA,CAAA,CAAA;AACA,gBAAA,GAAA,CAAA,GAAA,EAFA,CAGA;AACA;AACA;AACA;;AACA,YAAA,OAAA,IAAA,IAAA,CAAA,IAAA,CAPA,CAQA;AACA;;AATA;AAAA;AAAA;;AAAA;AAUA,+BAAA,IAAA,8HAAA;AAAA,gBAAA,IAAA;AACA,iBAAA,EAAA,GAAA,IAAA;AACA,WAZA,CAaA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,cAAA,IAAA,GAAA,IAAA,CAdA,CAeA;AACA,OAhBA;AAiBA;AA9BA;AAVA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <!-- <h3>Cart.vue购物车</h3> -->\r\n        <!-- 顶部位置:全选的复选框 -->\r\n        <div class=\"selectAll\">\r\n            全选\r\n            <input type=\"checkbox\" @change=\"selectAll\" v-model=\"allcb\">\r\n        </div>\r\n        <!-- 中间位置:购物车商品 -->\r\n        <!-- 全选按钮 -->\r\n        <div class=\"cart-item\" v-for=\"(item,i) of list\" :key=\"i\">\r\n            <div class=\"lefttxt\">\r\n                <input type=\"checkbox\" v-model=\"item.cb\">\r\n                <div class=\"lname\">{{item.lname}}</div>\r\n                <div class=\"price\">{{item.price.toFixed(2)}}</div>\r\n            </div>\r\n            <mt-button>删除</mt-button>\r\n        </div>\r\n        <!-- 底部位置:数量 -->\r\n        <div>\r\n            购物车数量<span style=\"color:red\">{{list.length}}</span>\r\n            <mt-button>删除选中的商品</mt-button>\r\n            <mt-button>清空购物车</mt-button>\r\n        </div>\r\n        <!-- {{this.list}} -->\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return {\r\n            list:[],//保存购物车返回的数据\r\n            allcb:false,//用来保存全选按钮的状态\r\n        }\r\n    },\r\n    created(){\r\n        this.loadMore();\r\n    },\r\n    methods:{\r\n        selectAll(){\r\n            //功能:全选按钮状态切换处理函数\r\n            //1.获取全选按钮状态\r\n            //2.创建循环遍历购物车商品\r\n            //3.将全选的状态赋值\r\n        },\r\n        loadMore(){\r\n            //加载购物车列表\r\n            //1.创建变量url\r\n            var url = \"findcart\";\r\n            //2.发送请求\r\n            console.log(1);\r\n            this.axios.get(url).then(res=>{\r\n                console.log(2);\r\n                console.log(res);\r\n                //3.获取服务器返回的数据\r\n                //4.保存到list\r\n                // this.list = res.data.data;\r\n                //4.1创建变量rows保存返回值\r\n                var rows = res.data.data;\r\n                //4.2创建循环遍历数组\r\n                //4.3添加属性cb表示商品复选框状态\r\n                for(var item of rows){\r\n                    item.cb = true;\r\n                }\r\n                //4.4将rows赋值给this.list\r\n                this.list = rows;\r\n                //5.在模板中输出..\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    /*1.购物车商品 */\r\n    .cart-item{\r\n        display:flex;/*子元素水平 */\r\n        justify-content:space-between;/*水平两端对齐 */\r\n        align-items:center;/*垂直居中 */\r\n        border-bottom:1px solid #ccc;\r\n        margin-top:25px;\r\n    }\r\n    /*2.左侧商品与价格 */\r\n    .lefttxt{\r\n        display:flex;\r\n        align-items:center;\r\n    }\r\n</style>"],"sourceRoot":"src\\components\\web1908\\xz"}]}