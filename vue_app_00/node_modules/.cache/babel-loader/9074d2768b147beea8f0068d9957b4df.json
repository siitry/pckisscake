{"remainingRequest":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\khy\\fourth\\day05\\vue_app_00\\src\\components\\web1908\\xz\\Login.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\src\\components\\web1908\\xz\\Login.vue","mtime":1575344474760},{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\khy\\fourth\\day05\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      uname: \"tom\",\n      //双向绑定\n      upwd: \"123\" //用户名密码\n\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      console.log(1); //功能:完成用户登录\n      //1.创建正则表达式3~12\n\n      var reg = /^[a-zA-Z0-9]{3,12}$/; //2.获取用户名和密码\n\n      var u = this.uname;\n      var p = this.upwd;\n      console.log(2);\n      console.log(u + \":\" + p); //3.验证用户名不正确显示出错信息\n\n      if (!reg.test(u)) {\n        this.$messagebox(\"消息\", \"用户名格式不正确\"); //4.返回\n\n        return;\n      } //5.验证密码不正确显示错误信息\n\n\n      if (!reg.test(p)) {\n        this.$messagebox(\"消息\", \"密码格式不正确\"); //6.返回\n\n        return;\n      }\n\n      console.log(3);\n      console.log(u + \":\" + p); //7.发送ajax请求\n\n      var url = \"login\";\n      var obj = {\n        uname: u,\n        upwd: p\n      };\n      console.log(4);\n      console.log(obj);\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        //成功的回调函数\n        console.log(5);\n        console.log(res); //8.获取服务器返回结果\n\n        if (res.data.code == -1) {\n          console.log(6); //9.出错显示出错信息\n\n          _this.$messagebox(\"消息\", \"用户名或密码错误\");\n        } else {\n          console.log(7); //10.跳转/Product\n\n          _this.$router.push(\"/Product\");\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;AASA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,KADA;AACA;AACA,YAAA,KAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,WAAA;AACA,SADA,mBACA;AAAA;;AACA,cAAA,GAAA,CAAA,CAAA,EADA,CAEA;AACA;;AACA,UAAA,MAAA,qBAAA,CAJA,CAKA;;AACA,UAAA,IAAA,KAAA,KAAA;AACA,UAAA,IAAA,KAAA,IAAA;AACA,cAAA,GAAA,CAAA,CAAA;AACA,cAAA,GAAA,CAAA,IAAA,GAAA,GAAA,CAAA,EATA,CAUA;;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAAA,WAAA,CAAA,IAAA,EAAA,UAAA,EADA,CAEA;;AACA;AACA,OAfA,CAgBA;;;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAAA,WAAA,CAAA,IAAA,EAAA,SAAA,EADA,CAEA;;AACA;AACA;;AACA,cAAA,GAAA,CAAA,CAAA;AACA,cAAA,GAAA,CAAA,IAAA,GAAA,GAAA,CAAA,EAvBA,CAwBA;;AACA,UAAA,MAAA,OAAA;AACA,UAAA,MAAA;AAAA,eAAA,CAAA;AAAA,cAAA;AAAA,OAAA;AACA,cAAA,GAAA,CAAA,CAAA;AACA,cAAA,GAAA,CAAA,GAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EACA,IADA,CACA,eAAA;AAAA;AACA,gBAAA,GAAA,CAAA,CAAA;AACA,gBAAA,GAAA,CAAA,GAAA,EAFA,CAGA;;AACA,YAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,kBAAA,GAAA,CAAA,CAAA,EADA,CAEA;;AACA,gBAAA,WAAA,CAAA,IAAA,EAAA,UAAA;AACA,SAJA,MAIA;AACA,kBAAA,GAAA,CAAA,CAAA,EADA,CAEA;;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA,OAdA;AAeA;AA7CA;AAPA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <!-- <h3>Login.vue</h3> -->\r\n        <mt-field label=\"用户名\" v-model=\"uname\" placeholder=\"请输入用户名\"></mt-field>\r\n        <mt-field label=\"密码\" v-model=\"upwd\" placeholder=\"请输入密码\"></mt-field>\r\n        <mt-button @click=\"login\" size=\"large\">登录</mt-button>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return {\r\n            uname:\"tom\",//双向绑定\r\n            upwd:\"123\",//用户名密码\r\n        }\r\n    },\r\n    methods:{\r\n        login(){\r\n            console.log(1);\r\n            //功能:完成用户登录\r\n            //1.创建正则表达式3~12\r\n            var reg = /^[a-zA-Z0-9]{3,12}$/;\r\n            //2.获取用户名和密码\r\n            var u = this.uname;\r\n            var p = this.upwd;\r\n            console.log(2);\r\n            console.log(u + \":\" + p)\r\n            //3.验证用户名不正确显示出错信息\r\n            if(!reg.test(u)){\r\n                this.$messagebox(\"消息\",\"用户名格式不正确\");\r\n                //4.返回\r\n                return;\r\n            }\r\n            //5.验证密码不正确显示错误信息\r\n            if(!reg.test(p)){\r\n                this.$messagebox(\"消息\",\"密码格式不正确\");\r\n                //6.返回\r\n                return;\r\n            }\r\n            console.log(3);\r\n            console.log(u + \":\" +p);\r\n            //7.发送ajax请求\r\n            var url = \"login\";\r\n            var obj = {uname:u,upwd:p};\r\n            console.log(4);\r\n            console.log(obj);\r\n            this.axios.get(url,{params:obj})\r\n            .then(res=>{//成功的回调函数\r\n                console.log(5);\r\n                console.log(res);\r\n            //8.获取服务器返回结果\r\n                if(res.data.code==-1){\r\n                    console.log(6);\r\n                    //9.出错显示出错信息\r\n                    this.$messagebox(\"消息\",\"用户名或密码错误\");\r\n                }else{\r\n                    console.log(7);\r\n                    //10.跳转/Product\r\n                    this.$router.push(\"/Product\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src\\components\\web1908\\xz"}]}