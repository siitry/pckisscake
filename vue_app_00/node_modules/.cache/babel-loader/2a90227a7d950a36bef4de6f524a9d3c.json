{"remainingRequest":"D:\\khy\\fourth\\Vue.js组件库\\day06\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\khy\\fourth\\Vue.js组件库\\day06\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\khy\\fourth\\Vue.js组件库\\day06\\vue_app_00\\src\\components\\web1908\\xz\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\khy\\fourth\\Vue.js组件库\\day06\\vue_app_00\\src\\components\\web1908\\xz\\Cart.vue","mtime":1575540728974},{"path":"D:\\khy\\fourth\\Vue.js组件库\\day06\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\khy\\fourth\\Vue.js组件库\\day06\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\khy\\fourth\\Vue.js组件库\\day06\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //保存购物车返回的数据\n      allcb: false //用来保存全选按钮的状态\n\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    clear: function clear() {\n      var _this = this;\n\n      //1.显示交互确认框\n      this.$messagebox.confirm(\"是否要清空购物车\").then(function (res) {\n        //2.创建变量str\n        var str = \"\"; //3.创建循环拼接字符串 id\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            str += item.id + \",\";\n          } //4.如果当前购物车为空,停止执行\n\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (str.length == 0) {\n          _this.$messagebox(\"消息\", \"购物车已为空\");\n\n          return;\n        } //5.截取最后字符串,\n\n\n        str = str.substring(0, str.length - 1); //6.创建变量url  delm\n\n        var url = \"delm\"; //7.创建变量obj  参数 ids\n\n        var obj = {\n          ids: str\n        };\n        console.log(obj); //8.发送请求ajax\n\n        _this.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          if (res.data.code == -2) {\n            _this.$toast(\"请登录\");\n\n            _this.$router.push(\"/Login\");\n          } else if (res.data.code == -1) {\n            _this.$toast(\"删除失败\");\n          } else {\n            _this.$toast(\"删除成功\");\n\n            _this.loadMore();\n          }\n        }); //9.接收服务器返回的数据\n\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    delItem: function delItem() {\n      var _this2 = this;\n\n      //功能:删除用户选中的商品\n      console.log(1); //1.显示删除确认框\n\n      this.$messagebox.confirm(\"是否删除选中的商品\").then(function (res) {\n        //2.创建变量保存字符串,保存删除商品id\n        var str = \"\";\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _this2.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n\n            if (item.cb) {\n              str += item.id + \",\";\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        console.log(str);\n\n        if (str.length == 0) {\n          _this2.$messagebox(\"消息\", \"请选择要删除的商品\");\n\n          return;\n        } //2.1删除字符后逗号\n        //0 截取字符串开始下标\n        //str.length-1 截取字符串长度\n\n\n        str = str.substring(0, str.length - 1);\n        console.log(str); //3.如果用户没有选中任何商品,提示\n        //4.创建变量url\n\n        var url = \"delm\"; //5.创建变量obj\n\n        var obj = {\n          ids: str\n        }; //6.发送ajax请求\n\n        _this2.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          console.log(3);\n          console.log(res);\n\n          if (res.data.code == -2) {\n            _this2.$toast(\"请登录\");\n\n            _this2.$router.push(\"/Login\");\n          } else if (res.data.code == -1) {\n            _this2.$toast(\"删除失败\");\n          } else {\n            _this2.$toast(\"删除成功\");\n\n            _this2.loadMore();\n          }\n        }); //7.请求成功刷新当前组件\n\n      }).catch(function (err) {\n        //点击取消执行\n        console.log(err);\n      });\n    },\n    del: function del(event) {\n      var _this3 = this;\n\n      //功能:删除一个用户指定商品信息\n      //1.显示删除二次确认框\n      this.$messagebox.confirm(\"是否删除指定的商品\").then(function (res) {\n        //2.添加参数event\n        //3.获取id值\n        var id = event.target.dataset.id; //console.log(1);\n        //console.log(id);\n        //4.创建变量url\n\n        var url = \"del\"; //5.创建变量obj\n\n        var obj = {\n          id: id\n        }; //6.发送ajax请求删除指定数据\n\n        _this3.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          console.log(2);\n          console.log(res); //7.-2 请登录\n\n          if (res.data.code == -2) {\n            _this3.$toast(\"请登录\");\n\n            _this3.$router.push(\"/Login\");\n          } else if (res.data.code == -1) {\n            _this3.$toast(\"删除失败\");\n          } else {\n            _this3.$toast(\"删除成功\");\n\n            _this3.loadMore();\n          } //8.-1 删除失败\n          //9.   删除成功\n\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    changeItem: function changeItem() {\n      //功能:为商品复选框添加修改事件\n      //如果所有商品状态为true全选状态也为true\n      //如果有一个商品状态为false全选状态也为false\n      //1.创建变量sum,累加商品的状态数量\n      var sum = 0; //2.创建循环遍历数据中所有商品状态为true,  ++\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n\n          if (item.cb) {\n            sum++;\n          }\n        } //3.如果sum和数组长度相同,全选为true,否则false\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (sum == this.list.length) {\n        this.allcb = true;\n      } else {\n        this.allcb = false;\n      }\n    },\n    selectAll: function selectAll() {\n      //功能:全选按钮状态切换处理函数\n      //1.获取全选按钮状态\n      var cb = this.allcb; //2.创建循环遍历购物车商品\n      //3.将全选的状态赋值给购物车商品状态\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.list[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var item = _step4.value;\n          item.cb = cb;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    },\n    loadMore: function loadMore() {\n      var _this4 = this;\n\n      //加载购物车列表\n      //1.创建变量url\n      var url = \"findcart\"; //2.发送请求\n      //console.log(1);\n\n      this.axios.get(url).then(function (res) {\n        console.log(2);\n        console.log(res); //3.获取服务器返回的数据\n        //4.保存到list\n        // this.list = res.data.data;\n        //4.1创建变量rows保存返回值\n\n        var rows = res.data.data; //4.2创建循环遍历数组\n        //4.3添加属性cb表示商品复选框状态\n\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = rows[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var item = _step5.value;\n            item.cb = false;\n          } //4.4将rows赋值给this.list\n\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n\n        _this4.list = rows; //4.5清空原有购物车数量\n\n        _this4.$store.commit(\"clearCartCount\"); //4.6修改购物车数量\n\n\n        _this4.$store.commit(\"addCartCount\", rows.length); //5.在模板中输出..\n\n      });\n    }\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA,EADA;AACA;AACA,aAAA,KAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,SAPA,qBAOA;AACA,SAAA,QAAA;AACA,GATA;AAUA,WAAA;AACA,SADA,mBACA;AAAA;;AACA;AACA,WAAA,WAAA,CAAA,OAAA,CAAA,UAAA,EACA,IADA,CACA,eAAA;AACA;AACA,YAAA,MAAA,EAAA,CAFA,CAGA;;AAHA;AAAA;AAAA;;AAAA;AAIA,+BAAA,MAAA,IAAA,8HAAA;AAAA,gBAAA,IAAA;AACA,mBAAA,KAAA,EAAA,GAAA,GAAA;AACA,WANA,CAOA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,YAAA,IAAA,MAAA,IAAA,CAAA,EAAA;AACA,gBAAA,WAAA,CAAA,IAAA,EAAA,QAAA;;AACA;AACA,SAXA,CAYA;;;AACA,cAAA,IAAA,SAAA,CAAA,CAAA,EAAA,IAAA,MAAA,GAAA,CAAA,CAAA,CAbA,CAcA;;AACA,YAAA,MAAA,MAAA,CAfA,CAgBA;;AACA,YAAA,MAAA;AAAA,eAAA;AAAA,SAAA;AACA,gBAAA,GAAA,CAAA,GAAA,EAlBA,CAmBA;;AACA,cAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,kBAAA;AAAA,SAAA,EAAA,IAAA,CAAA,eAAA;AACA,cAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,KAAA;;AACA,kBAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,WAHA,MAGA,IAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,MAAA;AACA,WAFA,MAEA;AACA,kBAAA,MAAA,CAAA,MAAA;;AACA,kBAAA,QAAA;AACA;AACA,SAVA,EApBA,CA+BA;;AACA,OAjCA,EAkCA,KAlCA,CAkCA,eAAA;AACA,gBAAA,GAAA,CAAA,GAAA;AACA,OApCA;AAqCA,KAxCA;AAyCA,WAzCA,qBAyCA;AAAA;;AACA;AACA,cAAA,GAAA,CAAA,CAAA,EAFA,CAGA;;AACA,WAAA,WAAA,CAAA,OAAA,CAAA,WAAA,EACA,IADA,CACA,eAAA;AACA;AACA,YAAA,MAAA,EAAA;AAFA;AAAA;AAAA;;AAAA;AAGA,gCAAA,OAAA,IAAA,mIAAA;AAAA,gBAAA,IAAA;;AACA,gBAAA,KAAA,EAAA,EAAA;AACA,qBAAA,KAAA,EAAA,GAAA,GAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,gBAAA,GAAA,CAAA,GAAA;;AACA,YAAA,IAAA,MAAA,IAAA,CAAA,EAAA;AACA,iBAAA,WAAA,CAAA,IAAA,EAAA,WAAA;;AACA;AACA,SAZA,CAaA;AACA;AACA;;;AACA,cAAA,IAAA,SAAA,CAAA,CAAA,EAAA,IAAA,MAAA,GAAA,CAAA,CAAA;AACA,gBAAA,GAAA,CAAA,GAAA,EAjBA,CAkBA;AACA;;AACA,YAAA,MAAA,MAAA,CApBA,CAqBA;;AACA,YAAA,MAAA;AAAA,eAAA;AAAA,SAAA,CAtBA,CAuBA;;AACA,eAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,kBAAA;AAAA,SAAA,EAAA,IAAA,CAAA,eAAA;AACA,kBAAA,GAAA,CAAA,CAAA;AACA,kBAAA,GAAA,CAAA,GAAA;;AACA,cAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,mBAAA,MAAA,CAAA,KAAA;;AACA,mBAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,WAHA,MAGA,IAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,mBAAA,MAAA,CAAA,MAAA;AACA,WAFA,MAEA;AACA,mBAAA,MAAA,CAAA,MAAA;;AACA,mBAAA,QAAA;AACA;AACA,SAZA,EAxBA,CAqCA;;AACA,OAvCA,EAwCA,KAxCA,CAwCA,eAAA;AACA;AACA,gBAAA,GAAA,CAAA,GAAA;AACA,OA3CA;AA4CA,KAzFA;AA0FA,OA1FA,eA0FA,KA1FA,EA0FA;AAAA;;AACA;AACA;AACA,WAAA,WAAA,CAAA,OAAA,CAAA,WAAA,EACA,IADA,CACA,eAAA;AACA;AACA;AACA,YAAA,KAAA,MAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAHA,CAIA;AACA;AACA;;AACA,YAAA,MAAA,KAAA,CAPA,CAQA;;AACA,YAAA,MAAA;AAAA;AAAA,SAAA,CATA,CAUA;;AACA,eAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,kBAAA;AAAA,SAAA,EAAA,IAAA,CAAA,eAAA;AACA,kBAAA,GAAA,CAAA,CAAA;AACA,kBAAA,GAAA,CAAA,GAAA,EAFA,CAGA;;AACA,cAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,mBAAA,MAAA,CAAA,KAAA;;AACA,mBAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,WAHA,MAGA,IAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,mBAAA,MAAA,CAAA,MAAA;AACA,WAFA,MAEA;AACA,mBAAA,MAAA,CAAA,MAAA;;AACA,mBAAA,QAAA;AACA,WAZA,CAaA;AACA;;AACA,SAfA;AAgBA,OA5BA,EA6BA,KA7BA,CA6BA,eAAA;AACA,gBAAA,GAAA,CAAA,GAAA;AACA,OA/BA;AAgCA,KA7HA;AA8HA,cA9HA,wBA8HA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,CAAA,CALA,CAMA;;AANA;AAAA;AAAA;;AAAA;AAOA,8BAAA,KAAA,IAAA,mIAAA;AAAA,cAAA,IAAA;;AACA,cAAA,KAAA,EAAA,EAAA;AAAA;AAAA;AACA,SATA,CAUA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,UAAA,OAAA,KAAA,IAAA,CAAA,MAAA,EAAA;AACA,aAAA,KAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,KAAA,GAAA,KAAA;AACA;AACA,KA9IA;AA+IA,aA/IA,uBA+IA;AACA;AACA;AACA,UAAA,KAAA,KAAA,KAAA,CAHA,CAIA;AACA;;AALA;AAAA;AAAA;;AAAA;AAMA,8BAAA,KAAA,IAAA,mIAAA;AAAA,cAAA,IAAA;AACA,eAAA,EAAA,GAAA,EAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,KAxJA;AAyJA,YAzJA,sBAyJA;AAAA;;AACA;AACA;AACA,UAAA,MAAA,UAAA,CAHA,CAIA;AACA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,eAAA;AACA,gBAAA,GAAA,CAAA,CAAA;AACA,gBAAA,GAAA,CAAA,GAAA,EAFA,CAGA;AACA;AACA;AACA;;AACA,YAAA,OAAA,IAAA,IAAA,CAAA,IAAA,CAPA,CAQA;AACA;;AATA;AAAA;AAAA;;AAAA;AAUA,gCAAA,IAAA,mIAAA;AAAA,gBAAA,IAAA;AACA,iBAAA,EAAA,GAAA,KAAA;AACA,WAZA,CAaA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAA,IAAA,GAAA,IAAA,CAdA,CAeA;;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,gBAAA,EAhBA,CAiBA;;;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA,KAAA,MAAA,EAlBA,CAmBA;;AACA,OApBA;AAqBA;AApLA;AAVA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <!-- <h3>Cart.vue购物车</h3> -->\r\n        <!-- 顶部位置:全选的复选框 -->\r\n        <div class=\"selectAll\">\r\n            全选\r\n            <input type=\"checkbox\" @change=\"selectAll\" v-model=\"allcb\">\r\n        </div>\r\n        <!-- 中间位置:购物车商品 -->\r\n        <!-- 全选按钮 -->\r\n        <div class=\"cart-item\" v-for=\"(item,i) of list\" :key=\"i\">\r\n            <div class=\"lefttxt\">\r\n                <input type=\"checkbox\" v-model=\"item.cb\" @change=\"changeItem\" style=\"size\">\r\n                <div class=\"pic\">{{item.pic}}</div>\r\n                <div class=\"lname\" style=\"margin-right:30px;font-size:20px;\">{{item.lname}}</div>\r\n                <div class=\"price\" style=\"color:red;font-size:20px;\">￥{{item.price.toFixed(2)}}</div>\r\n            </div>\r\n            <mt-button @click=\"del\" :data-id=\"item.id\">删除</mt-button>\r\n        </div>\r\n        <!-- 底部位置:数量 -->\r\n        <div>\r\n            购物车数量<span style=\"color:red\">{{$store.getters.getCartCount}}</span>\r\n            <mt-button @click=\"delItem\">删除选中的商品</mt-button>\r\n            <mt-button @click=\"clear\">清空购物车</mt-button>\r\n        </div>\r\n        <!-- {{this.list}} -->\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return {\r\n            list:[],//保存购物车返回的数据\r\n            allcb:false,//用来保存全选按钮的状态\r\n        }\r\n    },\r\n    created(){\r\n        this.loadMore();\r\n    },\r\n    methods:{\r\n        clear(){\r\n            //1.显示交互确认框\r\n            this.$messagebox.confirm(\"是否要清空购物车\")\r\n            .then(res=>{\r\n                //2.创建变量str\r\n                var str = \"\";\r\n                //3.创建循环拼接字符串 id\r\n                for(var item of this.list){\r\n                    str+=item.id+\",\"\r\n                }\r\n                //4.如果当前购物车为空,停止执行\r\n                if(str.length==0){\r\n                    this.$messagebox(\"消息\",\"购物车已为空\");\r\n                    return;\r\n                }\r\n                //5.截取最后字符串,\r\n                str = str.substring(0,str.length-1);\r\n                //6.创建变量url  delm\r\n                var url = \"delm\";\r\n                //7.创建变量obj  参数 ids\r\n                var obj = {ids:str};\r\n                console.log(obj);\r\n                //8.发送请求ajax\r\n                this.axios.get(url,{params:obj}).then(res=>{\r\n                    if(res.data.code==-2){\r\n                        this.$toast(\"请登录\")\r\n                        this.$router.push(\"/Login\")\r\n                    }else if(res.data.code==-1){\r\n                        this.$toast(\"删除失败\")\r\n                    }else{\r\n                        this.$toast(\"删除成功\");\r\n                        this.loadMore();\r\n                    }\r\n                })\r\n                //9.接收服务器返回的数据\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            })\r\n        },\r\n        delItem(){\r\n            //功能:删除用户选中的商品\r\n            console.log(1);\r\n            //1.显示删除确认框\r\n            this.$messagebox.confirm(\"是否删除选中的商品\")\r\n            .then(res=>{\r\n                //2.创建变量保存字符串,保存删除商品id\r\n                var str = \"\";\r\n                for(var item of this.list){\r\n                    if(item.cb){\r\n                        str+=item.id+\",\";\r\n                    }\r\n                }\r\n                console.log(str);\r\n                if(str.length==0){\r\n                    this.$messagebox(\"消息\",\"请选择要删除的商品\");\r\n                    return;\r\n                }\r\n                //2.1删除字符后逗号\r\n                //0 截取字符串开始下标\r\n                //str.length-1 截取字符串长度\r\n                str = str.substring(0,str.length-1);\r\n                console.log(str);\r\n                //3.如果用户没有选中任何商品,提示\r\n                //4.创建变量url\r\n                var url = \"delm\";\r\n                //5.创建变量obj\r\n                var obj = {ids:str};\r\n                //6.发送ajax请求\r\n                this.axios.get(url,{params:obj}).then(res=>{\r\n                    console.log(3);\r\n                    console.log(res);\r\n                    if(res.data.code==-2){\r\n                        this.$toast(\"请登录\");\r\n                        this.$router.push(\"/Login\")\r\n                    }else if(res.data.code==-1){\r\n                        this.$toast(\"删除失败\")\r\n                    }else{\r\n                        this.$toast(\"删除成功\");\r\n                        this.loadMore();\r\n                    }\r\n                })\r\n                //7.请求成功刷新当前组件\r\n            })\r\n            .catch(err=>{\r\n                //点击取消执行\r\n                console.log(err);\r\n            })\r\n        },\r\n        del(event){\r\n            //功能:删除一个用户指定商品信息\r\n            //1.显示删除二次确认框\r\n            this.$messagebox.confirm(\"是否删除指定的商品\")\r\n            .then(res=>{\r\n                //2.添加参数event\r\n                //3.获取id值\r\n                var id = event.target.dataset.id;\r\n                //console.log(1);\r\n                //console.log(id);\r\n                //4.创建变量url\r\n                var url = \"del\";\r\n                //5.创建变量obj\r\n                var obj = {id};\r\n                //6.发送ajax请求删除指定数据\r\n                this.axios.get(url,{params:obj}).then(res=>{\r\n                    console.log(2);\r\n                    console.log(res);\r\n                    //7.-2 请登录\r\n                    if(res.data.code==-2){\r\n                        this.$toast(\"请登录\")\r\n                        this.$router.push(\"/Login\")\r\n                    }else if(res.data.code==-1){\r\n                        this.$toast(\"删除失败\")\r\n                    }else{\r\n                        this.$toast(\"删除成功\");\r\n                        this.loadMore();\r\n                    }\r\n                    //8.-1 删除失败\r\n                    //9.   删除成功\r\n                })\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        },\r\n        changeItem(){\r\n            //功能:为商品复选框添加修改事件\r\n            //如果所有商品状态为true全选状态也为true\r\n            //如果有一个商品状态为false全选状态也为false\r\n            //1.创建变量sum,累加商品的状态数量\r\n            var sum=0;\r\n            //2.创建循环遍历数据中所有商品状态为true,  ++\r\n            for(var item of this.list){\r\n                if(item.cb){sum++}\r\n            }\r\n            //3.如果sum和数组长度相同,全选为true,否则false\r\n            if(sum==this.list.length){\r\n                this.allcb=true;\r\n            }else{\r\n                this.allcb=false;\r\n            }\r\n        },\r\n        selectAll(){\r\n            //功能:全选按钮状态切换处理函数\r\n            //1.获取全选按钮状态\r\n            var cb = this.allcb;\r\n            //2.创建循环遍历购物车商品\r\n            //3.将全选的状态赋值给购物车商品状态\r\n            for(var item of this.list){\r\n                item.cb = cb;\r\n            }\r\n        },\r\n        loadMore(){\r\n            //加载购物车列表\r\n            //1.创建变量url\r\n            var url = \"findcart\";\r\n            //2.发送请求\r\n            //console.log(1);\r\n            this.axios.get(url).then(res=>{\r\n                console.log(2);\r\n                console.log(res);\r\n                //3.获取服务器返回的数据\r\n                //4.保存到list\r\n                // this.list = res.data.data;\r\n                //4.1创建变量rows保存返回值\r\n                var rows = res.data.data;\r\n                //4.2创建循环遍历数组\r\n                //4.3添加属性cb表示商品复选框状态\r\n                for(var item of rows){\r\n                    item.cb = false;\r\n                }\r\n                //4.4将rows赋值给this.list\r\n                this.list = rows;\r\n                //4.5清空原有购物车数量\r\n                this.$store.commit(\"clearCartCount\")\r\n                //4.6修改购物车数量\r\n                this.$store.commit(\"addCartCount\",rows.length)\r\n                //5.在模板中输出..\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    /*1.购物车商品 */\r\n    .cart-item{\r\n        display:flex;/*子元素水平 */\r\n        justify-content:space-between;/*水平两端对齐 */\r\n        align-items:center;/*垂直居中 */\r\n        border-bottom:1px solid #ccc;\r\n        margin-top:25px;\r\n    }\r\n    /*2.左侧商品与价格 */\r\n    .lefttxt{\r\n        display:flex;\r\n        align-items:center;\r\n    }\r\n</style>"],"sourceRoot":"src\\components\\web1908\\xz"}]}