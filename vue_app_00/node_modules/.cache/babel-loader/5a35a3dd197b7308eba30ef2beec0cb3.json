{"remainingRequest":"C:\\xampp\\htdocs\\khy\\fourth\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\khy\\fourth\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\khy\\fourth\\vue_app_00\\src\\components\\xz\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\xampp\\htdocs\\khy\\fourth\\vue_app_00\\src\\components\\xz\\Cart.vue","mtime":1564998328000},{"path":"C:\\xampp\\htdocs\\khy\\fourth\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\xampp\\htdocs\\khy\\fourth\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\xampp\\htdocs\\khy\\fourth\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [] //购物车列表\n\n    };\n  },\n  methods: {\n    selectAll: function selectAll(e) {\n      //console.log(123);\n      //全选按钮处理函数\n      //1:获取全选按钮状态\n      var cb = e.target.checked; //console.log(cb);\n      //2:创建循环遍历购物车数组\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          //3:将全选状态赋值购物车商品选中状态\n          //item.cb 商品状态=cb全选按钮状态\n          item.cb = cb;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    delMitem: function delMitem() {\n      var _this = this;\n\n      //功能:删除多个购物车中指定商品\n      //1:创建变量保存多个购物车中id值\n      var str = \"\"; //\"1,2,3\"\n      //2:创建循环遍历数组获取状态为true为id值\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (item.cb) {\n            //true   当前商品被选中\n            str += item.id + \",\"; //将id拼接\n          }\n        } //2.1:判断用户是否选中了商品\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (str.length == 0) {\n        //2.2:如果没有选中商品，显示确认消息\n        this.$messagebox(\"请选择要删除的商品\");\n        return; //停止执行\n      } //console.log(str);//1,2,3,\n      //3:截取字符串中最后, \n      //substring截取字符串\n      //0             起始下标\n      //str.length-1  保留几个字符!!\n\n\n      str = str.substring(0, str.length - 1); //console.log(str) 1,2,3\n      //4:显示交互式提示框,再次请用户确认操作\n\n      this.$messagebox.confirm(\"是否删除数据?\").then(function (res) {\n        //用户选择确认按钮!!\n        var url = \"delM\"; //参数名ids:值拼接字符串!!\n\n        var ids = {\n          ids: str\n        }; //发送ajax请求\n\n        _this.axios.get(url, {\n          params: ids\n        }).then(function (res) {\n          //删除多个商品执行成功,加载新购物车列表\n          _this.loadMore(); //提示用户删除成功\n\n\n          _this.$toast(\"删除成功\");\n        });\n      }).catch(function (err) {\n        console.log(err);\n      }); //5:发送ajax请求删除多个数据\n      //6:提示用户删除成功\n      //7:重新加载购物车中数据\n    },\n    delItem: function delItem(e) {\n      var _this2 = this;\n\n      //功能:删除购物车中指定商品\n      //-获取购物车id\n      var id = e.target.dataset.id; //console.log(id);\n      //-交互提示用户是否删除指定商品\n\n      this.$messagebox.confirm(\"是否删除指定商品\").then(function (res) {\n        //-同意\n        //-发送ajax 服务器端程序 /del?id=1\n        var url = \"del\"; //请求服务器地址\n\n        var obj = {\n          id: id\n        }; //请求服务器时发送参数\n        //-返回服务器返回内容\n\n        _this2.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          //如果服务器返回成功 成功条件code>0\n          if (res.data.code > 0) {\n            _this2.$toast(\"删除成功\"); //提示消息\n\n\n            _this2.loadMore(); //加载最新列表\n\n          }\n        });\n      }).catch(function (err) {});\n    },\n    loadMore: function loadMore() {\n      var _this3 = this;\n\n      //功能:加载购物车中数据\n      //当组件创建成功后调用\n      //1:发送请求 cart\n      var url = \"cart\";\n      this.axios.get(url).then(function (res) {\n        //2:获取返回结果\n        if (res.data.code == -1) {\n          //3:如果用户没有执行登录操作\n          _this3.$messagebox(\"消息\", \"请登录\").then(function (res) {\n            //提示交互提示/跳转登录组件\n            _this3.$router.push(\"/Login\");\n\n            return;\n          });\n        } else {\n          //4:获取数据成功\n          var list = res.data.data; //4.1:创建循环遍历数组并且为每个元素\n          //    添加cb属性表示，商品前复选框状态\n          //###加载之前先清空 17:50\n\n          _this3.$store.commit(\"clear\"); //#注意先添加cb属性再赋值list 顺序\n\n\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var item = _step3.value;\n              //list\n              //4.11 添加cb属性表示状态\n              item.cb = false; //4.12 修改共享购物车中数量值 vuex\n\n              _this3.$store.commit(\"increment\");\n            } //5:保存购物车数据\n\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          _this3.list = list;\n        }\n      });\n    }\n  },\n  created: function created() {\n    this.loadMore();\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"cart\">\r\n    <!--Cart.vue 购物车组件-->\r\n    <!--h1>Cart.vue</h1-->\r\n    <!--(1)顶部按钮:全选-->\r\n     <div class=\"selectAll\">\r\n       全选 <input type=\"checkbox\" @change=\"selectAll\" />\r\n     </div>\r\n    <!--(2)购物车商品信息-->\r\n     <div class=\"cart-item\" v-for=\"(item,i) of list\" :key=\"i\">\r\n       <div class=\"leftImgText\">\r\n         <input type=\"checkbox\" v-model=\"item.cb\"/>\r\n         <img :src=\"'http://127.0.0.1:3000/'+item.img_url\" />\r\n         <div class=\"lname\">\r\n            {{item.lname}}\r\n         </div>\r\n         <div class=\"price\">\r\n           {{item.price}}\r\n         </div>\r\n       </div>\r\n       <mt-button @click=\"delItem\" :data-id=\"item.id\">删除</mt-button>\r\n     </div>\r\n    <!--(3)按钮 删除选中商品 17:39-->\r\n    <!-- 合计:-->\r\n     <div>\r\n       购物车商品数量\r\n       <span style=\"color:red\">\r\n         {{$store.getters.getCartCount}}\r\n       </span>\r\n       <mt-button @click=\"delMitem\">删除选中商品</mt-button>\r\n       小计:<span></span>\r\n     </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    return {\r\n      list:[]//购物车列表\r\n    }\r\n  },\r\n  methods:{\r\n    selectAll(e){\r\n      //console.log(123);\r\n      //全选按钮处理函数\r\n      //1:获取全选按钮状态\r\n      var cb = e.target.checked;\r\n      //console.log(cb);\r\n      //2:创建循环遍历购物车数组\r\n      for(var item of this.list){\r\n       //3:将全选状态赋值购物车商品选中状态\r\n       //item.cb 商品状态=cb全选按钮状态\r\n       item.cb = cb;\r\n      }\r\n    },\r\n    delMitem(){\r\n      //功能:删除多个购物车中指定商品\r\n      //1:创建变量保存多个购物车中id值\r\n      var str = \"\";  //\"1,2,3\"\r\n      //2:创建循环遍历数组获取状态为true为id值\r\n      for(var item of this.list){\r\n          if(item.cb){//true   当前商品被选中\r\n            str += item.id+\",\" //将id拼接\r\n          }\r\n      }\r\n      //2.1:判断用户是否选中了商品\r\n      if(str.length==0){\r\n       //2.2:如果没有选中商品，显示确认消息\r\n       this.$messagebox(\"请选择要删除的商品\");\r\n       return;//停止执行\r\n      }\r\n\r\n      //console.log(str);//1,2,3,\r\n      //3:截取字符串中最后, \r\n      //substring截取字符串\r\n      //0             起始下标\r\n      //str.length-1  保留几个字符!!\r\n      str = str.substring(0,str.length-1);\r\n      //console.log(str) 1,2,3\r\n      //4:显示交互式提示框,再次请用户确认操作\r\n      this.$messagebox.confirm(\"是否删除数据?\").then(res=>{\r\n        //用户选择确认按钮!!\r\n        var url = \"delM\";\r\n        //参数名ids:值拼接字符串!!\r\n        var ids = {ids:str};\r\n        //发送ajax请求\r\n        this.axios.get(url,{params:ids}).then(res=>{\r\n          //删除多个商品执行成功,加载新购物车列表\r\n          this.loadMore();\r\n          //提示用户删除成功\r\n          this.$toast(\"删除成功\");\r\n        })\r\n      })\r\n      .catch(err=>{\r\n        console.log(err);\r\n      })\r\n      //5:发送ajax请求删除多个数据\r\n      //6:提示用户删除成功\r\n      //7:重新加载购物车中数据\r\n    },\r\n    delItem(e){\r\n     //功能:删除购物车中指定商品\r\n     //-获取购物车id\r\n     var id = e.target.dataset.id;\r\n     //console.log(id);\r\n     //-交互提示用户是否删除指定商品\r\n     this.$messagebox.confirm(\"是否删除指定商品\").then(res=>{ \r\n      //-同意\r\n      //-发送ajax 服务器端程序 /del?id=1\r\n      var url = \"del\";   //请求服务器地址\r\n      var obj = {id:id}; //请求服务器时发送参数\r\n      //-返回服务器返回内容\r\n      this.axios.get(url,{params:obj}).then(\r\n        res=>{\r\n         //如果服务器返回成功 成功条件code>0\r\n         if(res.data.code > 0){\r\n           this.$toast(\"删除成功\");//提示消息\r\n           this.loadMore();       //加载最新列表\r\n         }    \r\n        }\r\n      )\r\n\r\n      })\r\n     .catch(err=>{ \r\n      })\r\n\r\n\r\n    },\r\n    loadMore(){\r\n      //功能:加载购物车中数据\r\n      //当组件创建成功后调用\r\n      //1:发送请求 cart\r\n      var url = \"cart\";\r\n      this.axios.get(url).then(res=>{\r\n       //2:获取返回结果\r\n       if(res.data.code==-1){\r\n       //3:如果用户没有执行登录操作\r\n       this.$messagebox(\"消息\",\"请登录\").then(res=>{\r\n         //提示交互提示/跳转登录组件\r\n          this.$router.push(\"/Login\");\r\n          return;\r\n       });\r\n       }else{\r\n        //4:获取数据成功\r\n        var list = res.data.data;\r\n        //4.1:创建循环遍历数组并且为每个元素\r\n        //    添加cb属性表示，商品前复选框状态\r\n        //###加载之前先清空 17:50\r\n        this.$store.commit(\"clear\");\r\n        //#注意先添加cb属性再赋值list 顺序\r\n        for(var item of list){//list\r\n          //4.11 添加cb属性表示状态\r\n          item.cb = false;\r\n          //4.12 修改共享购物车中数量值 vuex\r\n          this.$store.commit(\"increment\")\r\n        }    \r\n        //5:保存购物车数据\r\n        this.list = list;\r\n       }\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    this.loadMore();\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n /*1:商品项目元素*/\r\n .cart-item{\r\n   /*商品项目设置弹性布局*/\r\n   display: flex;\r\n   /*子元素两端对齐*/\r\n   justify-content: space-between;\r\n   /*垂直居中*/\r\n   align-items: center;\r\n   /*底部边框*/\r\n   border-bottom:1px solid #ccc;\r\n   /*顶部外边距离*/\r\n   margin-top:25px;\r\n }\r\n /*2:左侧图片与文字*/\r\n .leftImgText{\r\n   display: flex;/*子元素水平对齐*/\r\n   align-items: center;/*垂直居中*/\r\n }\r\n /*3:单独修改图片宽度和高度26*/\r\n  .leftImgText img{\r\n    width:50px;\r\n    height:50px;\r\n  }\r\n /*4:商品价格*/\r\n .price{\r\n   margin-left:25px;\r\n   color:red;\r\n }\r\n</style>\r\n\r\n\r\n"],"sourceRoot":"src\\components\\xz"}]}